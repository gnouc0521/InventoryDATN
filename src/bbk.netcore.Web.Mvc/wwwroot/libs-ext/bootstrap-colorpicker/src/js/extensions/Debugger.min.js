/**
 * Minified by jsDelivr using Terser v5.9.0.
 * Original file: /npm/bootstrap-colorpicker@3.4.0/src/js/extensions/Debugger.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";import Extension from"Extension";import $ from"jquery";class Debugger extends Extension{constructor(o,e={}){super(o,e),this.eventCounter=0,this.colorpicker.inputHandler.hasInput()&&this.colorpicker.inputHandler.input.on("change.colorpicker-ext",$.proxy(this.onChangeInput,this))}log(o,...e){this.eventCounter+=1;let r=`#${this.eventCounter}: Colorpicker#${this.colorpicker.id} [${o}]`;console.debug(r,...e),this.colorpicker.element.trigger({type:"colorpickerDebug",colorpicker:this.colorpicker,color:this.color,value:null,debug:{debugger:this,eventName:o,logArgs:e,logMessage:r}})}resolveColor(o,e=!0){return this.log("resolveColor()",o,e),!1}onCreate(o){return this.log("colorpickerCreate"),super.onCreate(o)}onDestroy(o){return this.log("colorpickerDestroy"),this.eventCounter=0,this.colorpicker.inputHandler.hasInput()&&this.colorpicker.inputHandler.input.off(".colorpicker-ext"),super.onDestroy(o)}onUpdate(o){this.log("colorpickerUpdate")}onChangeInput(o){this.log("input:change.colorpicker",o.value,o.color)}onChange(o){this.log("colorpickerChange",o.value,o.color)}onInvalid(o){this.log("colorpickerInvalid",o.value,o.color)}onHide(o){this.log("colorpickerHide"),this.eventCounter=0}onShow(o){this.log("colorpickerShow")}onDisable(o){this.log("colorpickerDisable")}onEnable(o){this.log("colorpickerEnable")}}export default Debugger;
//# sourceMappingURL=/sm/28fb54d8780d8684a7b2057a5275e52be40987ff972b7cece0778e7ed44d8925.map