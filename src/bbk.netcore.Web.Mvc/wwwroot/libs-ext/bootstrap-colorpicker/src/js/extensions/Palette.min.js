/**
 * Minified by jsDelivr using Terser v5.9.0.
 * Original file: /npm/bootstrap-colorpicker@3.4.0/src/js/extensions/Palette.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";import Extension from"Extension";import $ from"jquery";let defaults={colors:null,namesAsValues:!0};class Palette extends Extension{get colors(){return this.options.colors}constructor(o,t={}){super(o,$.extend(!0,{},defaults,t)),Array.isArray(this.options.colors)||"object"==typeof this.options.colors||(this.options.colors=null)}getLength(){return this.options.colors?Array.isArray(this.options.colors)?this.options.colors.length:"object"==typeof this.options.colors?Object.keys(this.options.colors).length:0:0}resolveColor(o,t=!0){return!(this.getLength()<=0)&&(Array.isArray(this.options.colors)?this.options.colors.indexOf(o)>=0?o:this.options.colors.indexOf(o.toUpperCase())>=0?o.toUpperCase():this.options.colors.indexOf(o.toLowerCase())>=0&&o.toLowerCase():"object"==typeof this.options.colors&&(!this.options.namesAsValues||t?this.getValue(o,!1):this.getName(o,this.getName("#"+o))))}getName(o,t=!1){if("string"!=typeof o||!this.options.colors)return t;for(let t in this.options.colors)if(this.options.colors.hasOwnProperty(t)&&this.options.colors[t].toLowerCase()===o.toLowerCase())return t;return t}getValue(o,t=!1){return"string"==typeof o&&this.options.colors&&this.options.colors.hasOwnProperty(o)?this.options.colors[o]:t}}export default Palette;
//# sourceMappingURL=/sm/595b41f61eb9303235885d1351003def6cf62a9935df2662084576c95acb2489.map