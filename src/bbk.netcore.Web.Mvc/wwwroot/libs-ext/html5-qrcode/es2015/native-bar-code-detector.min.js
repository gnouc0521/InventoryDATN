/**
 * Minified by jsDelivr using Terser v5.15.1.
 * Original file: /npm/html5-qrcode@2.3.4/es2015/native-bar-code-detector.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
var __awaiter=this&&this.__awaiter||function(t,e,r,o){return new(r||(r=Promise))((function(a,c){function d(t){try{i(o.next(t))}catch(t){c(t)}}function s(t){try{i(o.throw(t))}catch(t){c(t)}}function i(t){var e;t.done?a(t.value):(e=t.value,e instanceof r?e:new r((function(t){t(e)}))).then(d,s)}i((o=o.apply(t,e||[])).next())}))};import{QrcodeResultFormat,Html5QrcodeSupportedFormats}from"./core";export class BarcodeDetectorDelegate{constructor(t,e,r){if(this.formatMap=new Map([[Html5QrcodeSupportedFormats.QR_CODE,"qr_code"],[Html5QrcodeSupportedFormats.AZTEC,"aztec"],[Html5QrcodeSupportedFormats.CODABAR,"codabar"],[Html5QrcodeSupportedFormats.CODE_39,"code_39"],[Html5QrcodeSupportedFormats.CODE_93,"code_93"],[Html5QrcodeSupportedFormats.CODE_128,"code_128"],[Html5QrcodeSupportedFormats.DATA_MATRIX,"data_matrix"],[Html5QrcodeSupportedFormats.ITF,"itf"],[Html5QrcodeSupportedFormats.EAN_13,"ean_13"],[Html5QrcodeSupportedFormats.EAN_8,"ean_8"],[Html5QrcodeSupportedFormats.PDF_417,"pdf417"],[Html5QrcodeSupportedFormats.UPC_A,"upc_a"],[Html5QrcodeSupportedFormats.UPC_E,"upc_e"]]),this.reverseFormatMap=this.createReverseFormatMap(),!BarcodeDetectorDelegate.isSupported())throw"Use html5qrcode.min.js without edit, Use BarcodeDetectorDelegate only if it isSupported();";this.verbose=e,this.logger=r;const o=this.createBarcodeDetectorFormats(t);if(this.detector=new BarcodeDetector(o),!this.detector)throw"BarcodeDetector detector not supported"}static isSupported(){if(!("BarcodeDetector"in window))return!1;return void 0!==new BarcodeDetector({formats:["qr_code"]})}decodeAsync(t){return __awaiter(this,void 0,void 0,(function*(){const e=yield this.detector.detect(t);if(!e||0===e.length)throw"No barcode or QR code detected.";let r=this.selectLargestBarcode(e);return{text:r.rawValue,format:QrcodeResultFormat.create(this.toHtml5QrcodeSupportedFormats(r.format)),debugData:this.createDebugData()}}))}selectLargestBarcode(t){let e=null,r=0;for(let o of t){let t=o.boundingBox.width*o.boundingBox.height;t>r&&(r=t,e=o)}if(!e)throw"No largest barcode found";return e}createBarcodeDetectorFormats(t){let e=[];for(const r of t)this.formatMap.has(r)?e.push(this.formatMap.get(r)):this.logger.warn(`${r} is not supported byBarcodeDetectorDelegate`);return{formats:e}}toHtml5QrcodeSupportedFormats(t){if(!this.reverseFormatMap.has(t))throw`reverseFormatMap doesn't have ${t}`;return this.reverseFormatMap.get(t)}createReverseFormatMap(){let t=new Map;return this.formatMap.forEach(((e,r,o)=>{t.set(e,r)})),t}createDebugData(){return{decoderName:"BarcodeDetector"}}}
//# sourceMappingURL=/sm/86231ff57b89ac0ce43412abf36a0ca09325b4c3efaee7c173fb05cec6be2573.map