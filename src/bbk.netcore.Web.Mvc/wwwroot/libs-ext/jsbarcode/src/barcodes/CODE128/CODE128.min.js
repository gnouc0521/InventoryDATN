/**
 * Minified by jsDelivr using Terser v5.7.1.
 * Original file: /npm/jsbarcode@3.11.5/src/barcodes/CODE128/CODE128.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import Barcode from"../Barcode.js";import{SHIFT,SET_A,SET_B,MODULO,STOP,FNC1,SET_BY_CODE,SWAP,BARS}from"./constants";class CODE128 extends Barcode{constructor(t,e){super(t.substring(1),e),this.bytes=t.split("").map((t=>t.charCodeAt(0)))}valid(){return/^[\x00-\x7F\xC8-\xD3]+$/.test(this.data)}encode(){const t=this.bytes,e=t.shift()-105,s=SET_BY_CODE[e];if(void 0===s)throw new RangeError("The encoding does not start with a start character.");!0===this.shouldEncodeAsEan128()&&t.unshift(FNC1);const r=CODE128.next(t,1,s);return{text:this.text===this.data?this.text.replace(/[^\x20-\x7E]/g,""):this.text,data:CODE128.getBar(e)+r.result+CODE128.getBar((r.checksum+e)%MODULO)+CODE128.getBar(STOP)}}shouldEncodeAsEan128(){let t=this.options.ean128||!1;return"string"==typeof t&&(t="true"===t.toLowerCase()),t}static getBar(t){return BARS[t]?BARS[t].toString():""}static correctIndex(t,e){if(e===SET_A){const e=t.shift();return e<32?e+64:e-32}return e===SET_B?t.shift()-32:10*(t.shift()-48)+t.shift()-48}static next(t,e,s){if(!t.length)return{result:"",checksum:0};let r,n;if(t[0]>=200){n=t.shift()-105;const o=SWAP[n];void 0!==o?r=CODE128.next(t,e+1,o):(s!==SET_A&&s!==SET_B||n!==SHIFT||(t[0]=s===SET_A?t[0]>95?t[0]-96:t[0]:t[0]<32?t[0]+96:t[0]),r=CODE128.next(t,e+1,s))}else n=CODE128.correctIndex(t,s),r=CODE128.next(t,e+1,s);const o=n*e;return{result:CODE128.getBar(n)+r.result,checksum:o+r.checksum}}}export default CODE128;
//# sourceMappingURL=/sm/ac0c5d7485145d0675c671a6eda36600da98b0e12404771f9412152e344c2c12.map