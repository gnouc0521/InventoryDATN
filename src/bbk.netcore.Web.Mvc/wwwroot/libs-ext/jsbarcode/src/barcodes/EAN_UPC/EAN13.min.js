/**
 * Minified by jsDelivr using Terser v5.7.1.
 * Original file: /npm/jsbarcode@3.11.5/src/barcodes/EAN_UPC/EAN13.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{EAN13_STRUCTURE}from"./constants";import EAN from"./EAN";const checksum=t=>(10-t.substr(0,12).split("").map((t=>+t)).reduce(((t,s,e)=>e%2?t+3*s:t+s),0)%10)%10;class EAN13 extends EAN{constructor(t,s){-1!==t.search(/^[0-9]{12}$/)&&(t+=checksum(t)),super(t,s),this.lastChar=s.lastChar}valid(){return-1!==this.data.search(/^[0-9]{13}$/)&&+this.data[12]===checksum(this.data)}leftText(){return super.leftText(1,6)}leftEncode(){const t=this.data.substr(1,6),s=EAN13_STRUCTURE[this.data[0]];return super.leftEncode(t,s)}rightText(){return super.rightText(7,6)}rightEncode(){const t=this.data.substr(7,6);return super.rightEncode(t,"RRRRRR")}encodeGuarded(){const t=super.encodeGuarded();return this.options.displayValue&&(t.unshift({data:"000000000000",text:this.text.substr(0,1),options:{textAlign:"left",fontSize:this.fontSize}}),this.options.lastChar&&(t.push({data:"00"}),t.push({data:"00000",text:this.options.lastChar,options:{fontSize:this.fontSize}}))),t}}export default EAN13;
//# sourceMappingURL=/sm/77d6d16c1ed533857f1c4e8579b7a7173919cb9b6fd5b7d6f0eb86f95010fb11.map