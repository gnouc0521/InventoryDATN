/**
 * Minified by jsDelivr using Terser v5.7.1.
 * Original file: /npm/jsbarcode@3.11.5/src/barcodes/EAN_UPC/UPCE.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import encode from"./encoder";import Barcode from"../Barcode.js";import{checksum}from"./UPC.js";const EXPANSIONS=["XX00000XXX","XX10000XXX","XX20000XXX","XXX00000XX","XXXX00000X","XXXXX00005","XXXXX00006","XXXXX00007","XXXXX00008","XXXXX00009"],PARITIES=[["EEEOOO","OOOEEE"],["EEOEOO","OOEOEE"],["EEOOEO","OOEEOE"],["EEOOOE","OOEEEO"],["EOEEOO","OEOOEE"],["EOOEEO","OEEOOE"],["EOOOEE","OEEEOO"],["EOEOEO","OEOEOE"],["EOEOOE","OEOEEO"],["EOOEOE","OEEOEO"]];class UPCE extends Barcode{constructor(t,i){if(super(t,i),this.isValid=!1,-1!==t.search(/^[0-9]{6}$/))this.middleDigits=t,this.upcA=expandToUPCA(t,"0"),this.text=i.text||`${this.upcA[0]}${t}${this.upcA[this.upcA.length-1]}`,this.isValid=!0;else{if(-1===t.search(/^[01][0-9]{7}$/))return;if(this.middleDigits=t.substring(1,t.length-1),this.upcA=expandToUPCA(this.middleDigits,t[0]),this.upcA[this.upcA.length-1]!==t[t.length-1])return;this.isValid=!0}this.displayValue=i.displayValue,i.fontSize>10*i.width?this.fontSize=10*i.width:this.fontSize=i.fontSize,this.guardHeight=i.height+this.fontSize/2+i.textMargin}valid(){return this.isValid}encode(){return this.options.flat?this.flatEncoding():this.guardedEncoding()}flatEncoding(){var t="";return t+="101",t+=this.encodeMiddleDigits(),{data:t+="010101",text:this.text}}guardedEncoding(){var t=[];return this.displayValue&&t.push({data:"00000000",text:this.text[0],options:{textAlign:"left",fontSize:this.fontSize}}),t.push({data:"101",options:{height:this.guardHeight}}),t.push({data:this.encodeMiddleDigits(),text:this.text.substring(1,7),options:{fontSize:this.fontSize}}),t.push({data:"010101",options:{height:this.guardHeight}}),this.displayValue&&t.push({data:"00000000",text:this.text[7],options:{textAlign:"right",fontSize:this.fontSize}}),t}encodeMiddleDigits(){const t=this.upcA[0],i=this.upcA[this.upcA.length-1],e=PARITIES[parseInt(i)][parseInt(t)];return encode(this.middleDigits,e)}}function expandToUPCA(t,i){const e=parseInt(t[t.length-1]),s=EXPANSIONS[e];let E="",h=0;for(let i=0;i<s.length;i++){let e=s[i];E+="X"===e?t[h++]:e}return E=`${i}${E}`,`${E}${checksum(E)}`}export default UPCE;
//# sourceMappingURL=/sm/712584f43ffb8f8a86a2dacc81a05bb523a4cf50faa820470e5a0df34fe70d7e.map