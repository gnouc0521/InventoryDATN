/**
 * Minified by jsDelivr using Terser v5.7.1.
 * Original file: /npm/jsbarcode@3.11.5/src/renderers/canvas.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import merge from"../help/merge.js";import{calculateEncodingAttributes,getTotalWidthOfEncodings,getMaximumHeightOfEncodings}from"./shared.js";class CanvasRenderer{constructor(t,i,e){this.canvas=t,this.encodings=i,this.options=e}render(){if(!this.canvas.getContext)throw new Error("The browser does not support canvas.");this.prepareCanvas();for(let i=0;i<this.encodings.length;i++){var t=merge(this.options,this.encodings[i].options);this.drawCanvasBarcode(t,this.encodings[i]),this.drawCanvasText(t,this.encodings[i]),this.moveCanvasDrawing(this.encodings[i])}this.restoreCanvas()}prepareCanvas(){var t=this.canvas.getContext("2d");t.save(),calculateEncodingAttributes(this.encodings,this.options,t);var i=getTotalWidthOfEncodings(this.encodings),e=getMaximumHeightOfEncodings(this.encodings);this.canvas.width=i+this.options.marginLeft+this.options.marginRight,this.canvas.height=e,t.clearRect(0,0,this.canvas.width,this.canvas.height),this.options.background&&(t.fillStyle=this.options.background,t.fillRect(0,0,this.canvas.width,this.canvas.height)),t.translate(this.options.marginLeft,0)}drawCanvasBarcode(t,i){var e,n=this.canvas.getContext("2d"),a=i.data;e="top"==t.textPosition?t.marginTop+t.fontSize+t.textMargin:t.marginTop,n.fillStyle=t.lineColor;for(var s=0;s<a.length;s++){var o=s*t.width+i.barcodePadding;"1"===a[s]?n.fillRect(o,e,t.width,t.height):a[s]&&n.fillRect(o,e,t.width,t.height*a[s])}}drawCanvasText(t,i){var e,n,a=this.canvas.getContext("2d"),s=t.fontOptions+" "+t.fontSize+"px "+t.font;t.displayValue&&(n="top"==t.textPosition?t.marginTop+t.fontSize-t.textMargin:t.height+t.textMargin+t.marginTop+t.fontSize,a.font=s,"left"==t.textAlign||i.barcodePadding>0?(e=0,a.textAlign="left"):"right"==t.textAlign?(e=i.width-1,a.textAlign="right"):(e=i.width/2,a.textAlign="center"),a.fillText(i.text,e,n))}moveCanvasDrawing(t){this.canvas.getContext("2d").translate(t.width,0)}restoreCanvas(){this.canvas.getContext("2d").restore()}}export default CanvasRenderer;
//# sourceMappingURL=/sm/d25a84a0293c4cf32487c918bb9b1479bf1b7bdd7f849542abe5a2e73481b0fa.map