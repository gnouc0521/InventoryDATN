/**
 * Minified by jsDelivr using Terser v5.7.1.
 * Original file: /npm/jsbarcode@3.11.5/test/node/JsBarcode.test.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
var assert=require("assert"),JsBarcode=require("../../bin/JsBarcode.js"),{createCanvas:createCanvas}=require("canvas");describe("Encoders",(function(){it("should be able to include the encoders needed",(function(){CODE128=JsBarcode.getModule("CODE128"),GENERIC=JsBarcode.getModule("GenericBarcode")}))})),describe("node-canvas generation",(function(){it("should generate normal canvas",(function(){var a=createCanvas();JsBarcode(a,"Hello")})),it("checking width",(function(){var a=createCanvas(),e=createCanvas();JsBarcode(a,"Hello",{format:"CODE128"}),JsBarcode(e,"Hello",{format:"CODE39"}),assert.notEqual(a.width,e.width)})),it("should throws errors when suppose to",(function(){var a=createCanvas();assert.throws((function(){JsBarcode(a,"Hello",{format:"EAN8"})})),assert.throws((function(){JsBarcode("Hello","Hello",{format:"DOESNOTEXIST"})})),assert.throws((function(){JsBarcode(123,"Hello",{format:"DOESNOTEXIST"})}))})),it("should use the valid callback correct",(function(a){var e=createCanvas();JsBarcode(e,"Hello",{format:"CODE128",valid:function(e){e&&a()}})})),it("should use false valid callback correct",(function(a){var e=createCanvas();JsBarcode(e,"Hello",{format:"pharmacode",valid:function(e){e||a()}})})),it("should create output with same input",(function(){var a=createCanvas(),e=createCanvas();JsBarcode(a,"Hello",{format:"CODE128"}),JsBarcode(e,"Hello",{format:"CODE128"}),assert.equal(a.toDataURL(),e.toDataURL())})),it("should set background",(function(){var a=createCanvas(),e=a.getContext("2d");JsBarcode(a,"Hello",{format:"CODE128",background:"#f00"});var t=e.getImageData(0,0,1,1);assert.equal(255,t.data[0]),assert.equal(0,t.data[1]),assert.equal(0,t.data[2])}))})),describe("Text printing",(function(){it("should produce different output when displaying value",(function(){var a=createCanvas(),e=createCanvas();JsBarcode(a,"Hello",{format:"CODE128",displayValue:!1}),JsBarcode(e,"Hello",{format:"CODE128"}),assert.notEqual(a.toDataURL(),e.toDataURL())})),it("should produce different output when having different textAlign",(function(){var a=createCanvas(),e=createCanvas(),t=createCanvas();JsBarcode(a,"Hello",{format:"CODE128",displayValue:!0,textAlign:"center"}),JsBarcode(e,"Hello",{format:"CODE128",displayValue:!0,textAlign:"left"}),JsBarcode(t,"Hello",{format:"CODE128",displayValue:!0,textAlign:"right"}),assert.notEqual(a.toDataURL(),e.toDataURL()),assert.notEqual(e.toDataURL(),t.toDataURL()),assert.notEqual(a.toDataURL(),t.toDataURL())})),it("should allow numbers as input",(function(){var a=createCanvas();JsBarcode(a,1234567890128,{format:"EAN13"})}))})),describe("Extended Arrays",(function(){it("should work with extended arrays",(function(){Array.prototype.test=function(){},Array.prototype._test="test";var a=createCanvas();JsBarcode(a,"Hello"),JsBarcode(a,"HI",{format:"CODE39"})}))})),describe("Generic barcode",(function(){it("should not fail generic barcode",(function(){var a=new GENERIC("1234",{});assert.equal(a.valid(),!0),assert.equal(a.encode().text,"1234")}))}));
//# sourceMappingURL=/sm/965e6a1ba0d7e073d525bd9c20fc6cc2335e208a1f1578f0b3d448b3982b3b29.map