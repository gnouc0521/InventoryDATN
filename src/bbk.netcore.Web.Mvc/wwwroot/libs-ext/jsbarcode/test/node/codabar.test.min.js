/**
 * Minified by jsDelivr using Terser v5.7.1.
 * Original file: /npm/jsbarcode@3.11.5/test/node/codabar.test.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
var assert=require("assert"),JsBarcode=require("../../bin/JsBarcode.js"),Canvas=require("canvas");describe("Codabar",(function(){it("should be able to include the encoder(s)",(function(){Codabar=JsBarcode.getModule("codabar")})),it("should encode a string with start and stop characters",(function(){var a=new Codabar("A12345B",{});assert.equal("10110010010101011001010100101101100101010101101001011010100101001001011",a.encode().data)})),it("should add start and stop characters to a string without them",(function(){var a=new Codabar("12345",{});assert.equal("10110010010101011001010100101101100101010101101001011010100101011001001",a.encode().data)})),it("should return text string without start/stop characters",(function(){var a=new Codabar("A12345B",{});assert.equal("12345",a.encode().text)})),it("should warn with invalid start/stop characters",(function(){var a=new Codabar("X12345Y",{});assert.equal(!1,a.valid())})),it("should warn with only a start character",(function(){var a=new Codabar("A12345",{});assert.equal(!1,a.valid())})),it("should warn with only an invalid start character",(function(){var a=new Codabar("X12345",{});assert.equal(!1,a.valid())})),it("should warn with only a stop character",(function(){var a=new Codabar("12345A",{});assert.equal(!1,a.valid())})),it("should warn with only an invalid stop character",(function(){var a=new Codabar("12345X",{});assert.equal(!1,a.valid())})),it("should warn with only start and stop characters",(function(){var a=new Codabar("AA",{});assert.equal(!1,a.valid())})),it("should warn with an empty string",(function(){var a=new Codabar("",{});assert.equal(!1,a.valid())})),it("should warn with invalid input",(function(){var a=new Codabar("A1234OOPS56A",{});assert.equal(!1,a.valid())})),it("should work with text option",(function(){var a=new Codabar("A1234OOPS56A",{text:"THISISATEXT"});assert.equal("THISISATEXT",a.encode().text)}))}));
//# sourceMappingURL=/sm/a0944329788288c12d8ccfec3c3deb4515fdd3656816205f43b8102ed9d586bc.map