/**
 * Minified by jsDelivr using Terser v5.7.1.
 * Original file: /npm/jsbarcode@3.11.5/test/node/pharmacode.test.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
var assert=require("assert"),JsBarcode=require("../../bin/JsBarcode.js"),Canvas=require("canvas");describe("Pharmacode",(function(){it("should be able to include the encoder(s)",(function(){Pharmacode=JsBarcode.getModule("pharmacode")})),it("should be able to encode normal text",(function(){var e=new Pharmacode("1234",{});assert.equal("10010011100111001001110010010011100111",e.encode().data);e=new Pharmacode("4567",{});assert.equal("10010010011100111001110010011100111001001001",e.encode().data);e=new Pharmacode("12",{});assert.equal("11100100111",e.encode().data)})),it("should return getText correct",(function(){var e=new Pharmacode("1234",{});assert.equal("1234",e.encode().text)})),it("should warn with invalid text",(function(){var e=new Pharmacode("12345678",{});assert.equal(!1,e.valid())})),it("should work with text option",(function(){var e=new Pharmacode("12345678",{text:"THISISTEXT"});assert.equal("THISISTEXT",e.encode().text)}))}));
//# sourceMappingURL=/sm/4d27dde5105455637b50c143126a141d31760b106960bdca0393cd7e931494bb.map