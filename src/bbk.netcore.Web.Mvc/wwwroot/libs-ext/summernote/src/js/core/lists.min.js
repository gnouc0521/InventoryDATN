/**
 * Minified by jsDelivr using Terser v5.9.0.
 * Original file: /npm/summernote@0.8.20/src/js/core/lists.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import func from"./func";function head(n){return n[0]}function last(n){return n[n.length-1]}function initial(n){return n.slice(0,n.length-1)}function tail(n){return n.slice(1)}function find(n,t){for(let e=0,r=n.length;e<r;e++){const r=n[e];if(t(r))return r}}function all(n,t){for(let e=0,r=n.length;e<r;e++)if(!t(n[e]))return!1;return!0}function contains(n,t){if(n&&n.length&&t){if(n.indexOf)return-1!==n.indexOf(t);if(n.contains)return n.contains(t)}return!1}function sum(n,t){return t=t||func.self,n.reduce((function(n,e){return n+t(e)}),0)}function from(n){const t=[],e=n.length;let r=-1;for(;++r<e;)t[r]=n[r];return t}function isEmpty(n){return!n||!n.length}function clusterBy(n,t){if(!n.length)return[];return tail(n).reduce((function(n,e){const r=last(n);return t(last(r),e)?r[r.length]=e:n[n.length]=[e],n}),[[head(n)]])}function compact(n){const t=[];for(let e=0,r=n.length;e<r;e++)n[e]&&t.push(n[e]);return t}function unique(n){const t=[];for(let e=0,r=n.length;e<r;e++)contains(t,n[e])||t.push(n[e]);return t}function next(n,t){if(n&&n.length&&t){const e=n.indexOf(t);return-1===e?null:n[e+1]}return null}function prev(n,t){if(n&&n.length&&t){const e=n.indexOf(t);return-1===e?null:n[e-1]}return null}export default{head:head,last:last,initial:initial,tail:tail,prev:prev,next:next,find:find,contains:contains,all:all,sum:sum,from:from,isEmpty:isEmpty,clusterBy:clusterBy,compact:compact,unique:unique};
//# sourceMappingURL=/sm/9beaabb76b2ce9a24f3bc6f6bcd67f541cd828205f9dc330a2f2770aeb1c2507.map