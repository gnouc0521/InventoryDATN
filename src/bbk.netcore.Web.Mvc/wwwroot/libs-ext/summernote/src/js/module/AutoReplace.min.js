/**
 * Minified by jsDelivr using Terser v5.9.0.
 * Original file: /npm/summernote@0.8.20/src/js/module/AutoReplace.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import lists from"../core/lists";import dom from"../core/dom";import key from"../core/key";export default class AutoReplace{constructor(e){this.context=e,this.options=e.options.replace||{},this.keys=[key.code.ENTER,key.code.SPACE,key.code.PERIOD,key.code.COMMA,key.code.SEMICOLON,key.code.SLASH],this.previousKeydownCode=null,this.events={"summernote.keyup":(e,t)=>{t.isDefaultPrevented()||this.handleKeyup(t)},"summernote.keydown":(e,t)=>{this.handleKeydown(t)}}}shouldInitialize(){return!!this.options.match}initialize(){this.lastWord=null}destroy(){this.lastWord=null}replace(){if(!this.lastWord)return;const e=this,t=this.lastWord.toString();this.options.match(t,(function(t){if(t){let o="";if("string"==typeof t?o=dom.createText(t):t instanceof jQuery?o=t[0]:t instanceof Node&&(o=t),!o)return;e.lastWord.insertNode(o),e.lastWord=null,e.context.invoke("editor.focus")}}))}handleKeydown(e){if(this.previousKeydownCode&&lists.contains(this.keys,this.previousKeydownCode))this.previousKeydownCode=e.keyCode;else{if(lists.contains(this.keys,e.keyCode)){const e=this.context.invoke("editor.createRange").getWordRange();this.lastWord=e}this.previousKeydownCode=e.keyCode}}handleKeyup(e){lists.contains(this.keys,e.keyCode)&&this.replace()}}
//# sourceMappingURL=/sm/13d2ebc4e62775c57c5206475d6181efb994b7373592124b11aa80291c08f43e.map