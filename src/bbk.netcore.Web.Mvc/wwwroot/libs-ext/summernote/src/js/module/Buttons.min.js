/**
 * Minified by jsDelivr using Terser v5.9.0.
 * Original file: /npm/summernote@0.8.20/src/js/module/Buttons.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import $ from"jquery";import func from"../core/func";import lists from"../core/lists";import env from"../core/env";export default class Buttons{constructor(t){this.ui=$.summernote.ui,this.context=t,this.$toolbar=t.layoutInfo.toolbar,this.options=t.options,this.lang=this.options.langInfo,this.invertedKeyMap=func.invertObject(this.options.keyMap[env.isMac?"mac":"pc"])}representShortcut(t){let o=this.invertedKeyMap[t];return this.options.shortcuts&&o?(env.isMac&&(o=o.replace("CMD","⌘").replace("SHIFT","⇧")),o=o.replace("BACKSLASH","\\").replace("SLASH","/").replace("LEFTBRACKET","[").replace("RIGHTBRACKET","]")," ("+o+")"):""}button(t){return!this.options.tooltip&&t.tooltip&&delete t.tooltip,t.container=this.options.container,this.ui.button(t)}initialize(){this.addToolbarButtons(),this.addImagePopoverButtons(),this.addLinkPopoverButtons(),this.addTablePopoverButtons(),this.fontInstalledMap={}}destroy(){delete this.fontInstalledMap}isFontInstalled(t){return Object.prototype.hasOwnProperty.call(this.fontInstalledMap,t)||(this.fontInstalledMap[t]=env.isFontInstalled(t)||lists.contains(this.options.fontNamesIgnoreCheck,t)),this.fontInstalledMap[t]}isFontDeservedToAdd(t){return""!==(t=t.toLowerCase())&&this.isFontInstalled(t)&&-1===env.genericFontFamilies.indexOf(t)}colorPalette(t,o,e,n){return this.ui.buttonGroup({className:"note-color "+t,children:[this.button({className:"note-current-color-button",contents:this.ui.icon(this.options.icons.font+" note-recent-color"),tooltip:o,click:t=>{const o=$(t.currentTarget);e&&n?this.context.invoke("editor.color",{backColor:o.attr("data-backColor"),foreColor:o.attr("data-foreColor")}):e?this.context.invoke("editor.color",{backColor:o.attr("data-backColor")}):n&&this.context.invoke("editor.color",{foreColor:o.attr("data-foreColor")})},callback:t=>{const o=t.find(".note-recent-color");e&&(o.css("background-color",this.options.colorButton.backColor),t.attr("data-backColor",this.options.colorButton.backColor)),n?(o.css("color",this.options.colorButton.foreColor),t.attr("data-foreColor",this.options.colorButton.foreColor)):o.css("color","transparent")}}),this.button({className:"dropdown-toggle",contents:this.ui.dropdownButtonContents("",this.options),tooltip:this.lang.color.more,data:{toggle:"dropdown"}}),this.ui.dropdown({items:(e?['<div class="note-palette">','<div class="note-palette-title">'+this.lang.color.background+"</div>","<div>",'<button type="button" class="note-color-reset btn btn-light btn-default" data-event="backColor" data-value="transparent">',this.lang.color.transparent,"</button>","</div>",'<div class="note-holder" data-event="backColor">\x3c!-- back colors --\x3e</div>',"<div>",'<button type="button" class="note-color-select btn btn-light btn-default" data-event="openPalette" data-value="backColorPicker-'+this.options.id+'">',this.lang.color.cpSelect,"</button>",'<input type="color" id="backColorPicker-'+this.options.id+'" class="note-btn note-color-select-btn" value="'+this.options.colorButton.backColor+'" data-event="backColorPalette-'+this.options.id+'">',"</div>",'<div class="note-holder-custom" id="backColorPalette-'+this.options.id+'" data-event="backColor"></div>',"</div>"].join(""):"")+(n?['<div class="note-palette">','<div class="note-palette-title">'+this.lang.color.foreground+"</div>","<div>",'<button type="button" class="note-color-reset btn btn-light btn-default" data-event="removeFormat" data-value="foreColor">',this.lang.color.resetToDefault,"</button>","</div>",'<div class="note-holder" data-event="foreColor">\x3c!-- fore colors --\x3e</div>',"<div>",'<button type="button" class="note-color-select btn btn-light btn-default" data-event="openPalette" data-value="foreColorPicker-'+this.options.id+'">',this.lang.color.cpSelect,"</button>",'<input type="color" id="foreColorPicker-'+this.options.id+'" class="note-btn note-color-select-btn" value="'+this.options.colorButton.foreColor+'" data-event="foreColorPalette-'+this.options.id+'">',"</div>",'<div class="note-holder-custom" id="foreColorPalette-'+this.options.id+'" data-event="foreColor"></div>',"</div>"].join(""):""),callback:t=>{t.find(".note-holder").each(((t,o)=>{const e=$(o);e.append(this.ui.palette({colors:this.options.colors,colorsName:this.options.colorsName,eventName:e.data("event"),container:this.options.container,tooltip:this.options.tooltip}).render())}));var o=[["#FFFFFF","#FFFFFF","#FFFFFF","#FFFFFF","#FFFFFF","#FFFFFF","#FFFFFF","#FFFFFF"]];t.find(".note-holder-custom").each(((t,e)=>{const n=$(e);n.append(this.ui.palette({colors:o,colorsName:o,eventName:n.data("event"),container:this.options.container,tooltip:this.options.tooltip}).render())})),t.find("input[type=color]").each(((o,e)=>{$(e).change((function(){const o=t.find("#"+$(this).data("event")).find(".note-color-btn").first(),e=this.value.toUpperCase();o.css("background-color",e).attr("aria-label",e).attr("data-value",e).attr("data-original-title",e),o.click()}))}))},click:o=>{o.stopPropagation();const e=$("."+t).find(".note-dropdown-menu"),n=$(o.target),i=n.data("event"),s=n.attr("data-value");if("openPalette"===i){const t=e.find("#"+s),o=$(e.find("#"+t.data("event")).find(".note-color-row")[0]),n=o.find(".note-color-btn").last().detach(),i=t.val();n.css("background-color",i).attr("aria-label",i).attr("data-value",i).attr("data-original-title",i),o.prepend(n),t.click()}else{if(lists.contains(["backColor","foreColor"],i)){const t="backColor"===i?"background-color":"color",o=n.closest(".note-color").find(".note-recent-color"),e=n.closest(".note-color").find(".note-current-color-button");o.css(t,s),e.attr("data-"+i,s)}this.context.invoke("editor."+i,s)}}})]}).render()}addToolbarButtons(){this.context.memo("button.style",(()=>this.ui.buttonGroup([this.button({className:"dropdown-toggle",contents:this.ui.dropdownButtonContents(this.ui.icon(this.options.icons.magic),this.options),tooltip:this.lang.style.style,data:{toggle:"dropdown"}}),this.ui.dropdown({className:"dropdown-style",items:this.options.styleTags,title:this.lang.style.style,template:t=>{"string"==typeof t&&(t={tag:t,title:Object.prototype.hasOwnProperty.call(this.lang.style,t)?this.lang.style[t]:t});const o=t.tag,e=t.title;return"<"+o+(t.style?' style="'+t.style+'" ':"")+(t.className?' class="'+t.className+'"':"")+">"+e+"</"+o+">"},click:this.context.createInvokeHandler("editor.formatBlock")})]).render()));for(let t=0,o=this.options.styleTags.length;t<o;t++){const o=this.options.styleTags[t];this.context.memo("button.style."+o,(()=>this.button({className:"note-btn-style-"+o,contents:'<div data-value="'+o+'">'+o.toUpperCase()+"</div>",tooltip:this.lang.style[o],click:this.context.createInvokeHandler("editor.formatBlock")}).render()))}this.context.memo("button.bold",(()=>this.button({className:"note-btn-bold",contents:this.ui.icon(this.options.icons.bold),tooltip:this.lang.font.bold+this.representShortcut("bold"),click:this.context.createInvokeHandlerAndUpdateState("editor.bold")}).render())),this.context.memo("button.italic",(()=>this.button({className:"note-btn-italic",contents:this.ui.icon(this.options.icons.italic),tooltip:this.lang.font.italic+this.representShortcut("italic"),click:this.context.createInvokeHandlerAndUpdateState("editor.italic")}).render())),this.context.memo("button.underline",(()=>this.button({className:"note-btn-underline",contents:this.ui.icon(this.options.icons.underline),tooltip:this.lang.font.underline+this.representShortcut("underline"),click:this.context.createInvokeHandlerAndUpdateState("editor.underline")}).render())),this.context.memo("button.clear",(()=>this.button({contents:this.ui.icon(this.options.icons.eraser),tooltip:this.lang.font.clear+this.representShortcut("removeFormat"),click:this.context.createInvokeHandler("editor.removeFormat")}).render())),this.context.memo("button.strikethrough",(()=>this.button({className:"note-btn-strikethrough",contents:this.ui.icon(this.options.icons.strikethrough),tooltip:this.lang.font.strikethrough+this.representShortcut("strikethrough"),click:this.context.createInvokeHandlerAndUpdateState("editor.strikethrough")}).render())),this.context.memo("button.superscript",(()=>this.button({className:"note-btn-superscript",contents:this.ui.icon(this.options.icons.superscript),tooltip:this.lang.font.superscript,click:this.context.createInvokeHandlerAndUpdateState("editor.superscript")}).render())),this.context.memo("button.subscript",(()=>this.button({className:"note-btn-subscript",contents:this.ui.icon(this.options.icons.subscript),tooltip:this.lang.font.subscript,click:this.context.createInvokeHandlerAndUpdateState("editor.subscript")}).render())),this.context.memo("button.fontname",(()=>{const t=this.context.invoke("editor.currentStyle");return this.options.addDefaultFonts&&$.each(t["font-family"].split(","),((t,o)=>{o=o.trim().replace(/['"]+/g,""),this.isFontDeservedToAdd(o)&&-1===this.options.fontNames.indexOf(o)&&this.options.fontNames.push(o)})),this.ui.buttonGroup([this.button({className:"dropdown-toggle",contents:this.ui.dropdownButtonContents('<span class="note-current-fontname"></span>',this.options),tooltip:this.lang.font.name,data:{toggle:"dropdown"}}),this.ui.dropdownCheck({className:"dropdown-fontname",checkClassName:this.options.icons.menuCheck,items:this.options.fontNames.filter(this.isFontInstalled.bind(this)),title:this.lang.font.name,template:t=>'<span style="font-family: '+env.validFontName(t)+'">'+t+"</span>",click:this.context.createInvokeHandlerAndUpdateState("editor.fontName")})]).render()})),this.context.memo("button.fontsize",(()=>this.ui.buttonGroup([this.button({className:"dropdown-toggle",contents:this.ui.dropdownButtonContents('<span class="note-current-fontsize"></span>',this.options),tooltip:this.lang.font.size,data:{toggle:"dropdown"}}),this.ui.dropdownCheck({className:"dropdown-fontsize",checkClassName:this.options.icons.menuCheck,items:this.options.fontSizes,title:this.lang.font.size,click:this.context.createInvokeHandlerAndUpdateState("editor.fontSize")})]).render())),this.context.memo("button.fontsizeunit",(()=>this.ui.buttonGroup([this.button({className:"dropdown-toggle",contents:this.ui.dropdownButtonContents('<span class="note-current-fontsizeunit"></span>',this.options),tooltip:this.lang.font.sizeunit,data:{toggle:"dropdown"}}),this.ui.dropdownCheck({className:"dropdown-fontsizeunit",checkClassName:this.options.icons.menuCheck,items:this.options.fontSizeUnits,title:this.lang.font.sizeunit,click:this.context.createInvokeHandlerAndUpdateState("editor.fontSizeUnit")})]).render())),this.context.memo("button.color",(()=>this.colorPalette("note-color-all",this.lang.color.recent,!0,!0))),this.context.memo("button.forecolor",(()=>this.colorPalette("note-color-fore",this.lang.color.foreground,!1,!0))),this.context.memo("button.backcolor",(()=>this.colorPalette("note-color-back",this.lang.color.background,!0,!1))),this.context.memo("button.ul",(()=>this.button({contents:this.ui.icon(this.options.icons.unorderedlist),tooltip:this.lang.lists.unordered+this.representShortcut("insertUnorderedList"),click:this.context.createInvokeHandler("editor.insertUnorderedList")}).render())),this.context.memo("button.ol",(()=>this.button({contents:this.ui.icon(this.options.icons.orderedlist),tooltip:this.lang.lists.ordered+this.representShortcut("insertOrderedList"),click:this.context.createInvokeHandler("editor.insertOrderedList")}).render()));const t=this.button({contents:this.ui.icon(this.options.icons.alignLeft),tooltip:this.lang.paragraph.left+this.representShortcut("justifyLeft"),click:this.context.createInvokeHandler("editor.justifyLeft")}),o=this.button({contents:this.ui.icon(this.options.icons.alignCenter),tooltip:this.lang.paragraph.center+this.representShortcut("justifyCenter"),click:this.context.createInvokeHandler("editor.justifyCenter")}),e=this.button({contents:this.ui.icon(this.options.icons.alignRight),tooltip:this.lang.paragraph.right+this.representShortcut("justifyRight"),click:this.context.createInvokeHandler("editor.justifyRight")}),n=this.button({contents:this.ui.icon(this.options.icons.alignJustify),tooltip:this.lang.paragraph.justify+this.representShortcut("justifyFull"),click:this.context.createInvokeHandler("editor.justifyFull")}),i=this.button({contents:this.ui.icon(this.options.icons.outdent),tooltip:this.lang.paragraph.outdent+this.representShortcut("outdent"),click:this.context.createInvokeHandler("editor.outdent")}),s=this.button({contents:this.ui.icon(this.options.icons.indent),tooltip:this.lang.paragraph.indent+this.representShortcut("indent"),click:this.context.createInvokeHandler("editor.indent")});this.context.memo("button.justifyLeft",func.invoke(t,"render")),this.context.memo("button.justifyCenter",func.invoke(o,"render")),this.context.memo("button.justifyRight",func.invoke(e,"render")),this.context.memo("button.justifyFull",func.invoke(n,"render")),this.context.memo("button.outdent",func.invoke(i,"render")),this.context.memo("button.indent",func.invoke(s,"render")),this.context.memo("button.paragraph",(()=>this.ui.buttonGroup([this.button({className:"dropdown-toggle",contents:this.ui.dropdownButtonContents(this.ui.icon(this.options.icons.alignLeft),this.options),tooltip:this.lang.paragraph.paragraph,data:{toggle:"dropdown"}}),this.ui.dropdown([this.ui.buttonGroup({className:"note-align",children:[t,o,e,n]}),this.ui.buttonGroup({className:"note-list",children:[i,s]})])]).render())),this.context.memo("button.height",(()=>this.ui.buttonGroup([this.button({className:"dropdown-toggle",contents:this.ui.dropdownButtonContents(this.ui.icon(this.options.icons.textHeight),this.options),tooltip:this.lang.font.height,data:{toggle:"dropdown"}}),this.ui.dropdownCheck({items:this.options.lineHeights,checkClassName:this.options.icons.menuCheck,className:"dropdown-line-height",title:this.lang.font.height,click:this.context.createInvokeHandler("editor.lineHeight")})]).render())),this.context.memo("button.table",(()=>this.ui.buttonGroup([this.button({className:"dropdown-toggle",contents:this.ui.dropdownButtonContents(this.ui.icon(this.options.icons.table),this.options),tooltip:this.lang.table.table,data:{toggle:"dropdown"}}),this.ui.dropdown({title:this.lang.table.table,className:"note-table",items:['<div class="note-dimension-picker">','<div class="note-dimension-picker-mousecatcher" data-event="insertTable" data-value="1x1"></div>','<div class="note-dimension-picker-highlighted"></div>','<div class="note-dimension-picker-unhighlighted"></div>',"</div>",'<div class="note-dimension-display">1 x 1</div>'].join("")})],{callback:t=>{t.find(".note-dimension-picker-mousecatcher").css({width:this.options.insertTableMaxSize.col+"em",height:this.options.insertTableMaxSize.row+"em"}).mouseup(this.context.createInvokeHandler("editor.insertTable")).on("mousemove",this.tableMoveHandler.bind(this))}}).render())),this.context.memo("button.link",(()=>this.button({contents:this.ui.icon(this.options.icons.link),tooltip:this.lang.link.link+this.representShortcut("linkDialog.show"),click:this.context.createInvokeHandler("linkDialog.show")}).render())),this.context.memo("button.picture",(()=>this.button({contents:this.ui.icon(this.options.icons.picture),tooltip:this.lang.image.image,click:this.context.createInvokeHandler("imageDialog.show")}).render())),this.context.memo("button.video",(()=>this.button({contents:this.ui.icon(this.options.icons.video),tooltip:this.lang.video.video,click:this.context.createInvokeHandler("videoDialog.show")}).render())),this.context.memo("button.hr",(()=>this.button({contents:this.ui.icon(this.options.icons.minus),tooltip:this.lang.hr.insert+this.representShortcut("insertHorizontalRule"),click:this.context.createInvokeHandler("editor.insertHorizontalRule")}).render())),this.context.memo("button.fullscreen",(()=>this.button({className:"btn-fullscreen note-codeview-keep",contents:this.ui.icon(this.options.icons.arrowsAlt),tooltip:this.lang.options.fullscreen,click:this.context.createInvokeHandler("fullscreen.toggle")}).render())),this.context.memo("button.codeview",(()=>this.button({className:"btn-codeview note-codeview-keep",contents:this.ui.icon(this.options.icons.code),tooltip:this.lang.options.codeview,click:this.context.createInvokeHandler("codeview.toggle")}).render())),this.context.memo("button.redo",(()=>this.button({contents:this.ui.icon(this.options.icons.redo),tooltip:this.lang.history.redo+this.representShortcut("redo"),click:this.context.createInvokeHandler("editor.redo")}).render())),this.context.memo("button.undo",(()=>this.button({contents:this.ui.icon(this.options.icons.undo),tooltip:this.lang.history.undo+this.representShortcut("undo"),click:this.context.createInvokeHandler("editor.undo")}).render())),this.context.memo("button.help",(()=>this.button({contents:this.ui.icon(this.options.icons.question),tooltip:this.lang.options.help,click:this.context.createInvokeHandler("helpDialog.show")}).render()))}addImagePopoverButtons(){this.context.memo("button.resizeFull",(()=>this.button({contents:'<span class="note-fontsize-10">100%</span>',tooltip:this.lang.image.resizeFull,click:this.context.createInvokeHandler("editor.resize","1")}).render())),this.context.memo("button.resizeHalf",(()=>this.button({contents:'<span class="note-fontsize-10">50%</span>',tooltip:this.lang.image.resizeHalf,click:this.context.createInvokeHandler("editor.resize","0.5")}).render())),this.context.memo("button.resizeQuarter",(()=>this.button({contents:'<span class="note-fontsize-10">25%</span>',tooltip:this.lang.image.resizeQuarter,click:this.context.createInvokeHandler("editor.resize","0.25")}).render())),this.context.memo("button.resizeNone",(()=>this.button({contents:this.ui.icon(this.options.icons.rollback),tooltip:this.lang.image.resizeNone,click:this.context.createInvokeHandler("editor.resize","0")}).render())),this.context.memo("button.floatLeft",(()=>this.button({contents:this.ui.icon(this.options.icons.floatLeft),tooltip:this.lang.image.floatLeft,click:this.context.createInvokeHandler("editor.floatMe","left")}).render())),this.context.memo("button.floatRight",(()=>this.button({contents:this.ui.icon(this.options.icons.floatRight),tooltip:this.lang.image.floatRight,click:this.context.createInvokeHandler("editor.floatMe","right")}).render())),this.context.memo("button.floatNone",(()=>this.button({contents:this.ui.icon(this.options.icons.rollback),tooltip:this.lang.image.floatNone,click:this.context.createInvokeHandler("editor.floatMe","none")}).render())),this.context.memo("button.removeMedia",(()=>this.button({contents:this.ui.icon(this.options.icons.trash),tooltip:this.lang.image.remove,click:this.context.createInvokeHandler("editor.removeMedia")}).render()))}addLinkPopoverButtons(){this.context.memo("button.linkDialogShow",(()=>this.button({contents:this.ui.icon(this.options.icons.link),tooltip:this.lang.link.edit,click:this.context.createInvokeHandler("linkDialog.show")}).render())),this.context.memo("button.unlink",(()=>this.button({contents:this.ui.icon(this.options.icons.unlink),tooltip:this.lang.link.unlink,click:this.context.createInvokeHandler("editor.unlink")}).render()))}addTablePopoverButtons(){this.context.memo("button.addRowUp",(()=>this.button({className:"btn-md",contents:this.ui.icon(this.options.icons.rowAbove),tooltip:this.lang.table.addRowAbove,click:this.context.createInvokeHandler("editor.addRow","top")}).render())),this.context.memo("button.addRowDown",(()=>this.button({className:"btn-md",contents:this.ui.icon(this.options.icons.rowBelow),tooltip:this.lang.table.addRowBelow,click:this.context.createInvokeHandler("editor.addRow","bottom")}).render())),this.context.memo("button.addColLeft",(()=>this.button({className:"btn-md",contents:this.ui.icon(this.options.icons.colBefore),tooltip:this.lang.table.addColLeft,click:this.context.createInvokeHandler("editor.addCol","left")}).render())),this.context.memo("button.addColRight",(()=>this.button({className:"btn-md",contents:this.ui.icon(this.options.icons.colAfter),tooltip:this.lang.table.addColRight,click:this.context.createInvokeHandler("editor.addCol","right")}).render())),this.context.memo("button.deleteRow",(()=>this.button({className:"btn-md",contents:this.ui.icon(this.options.icons.rowRemove),tooltip:this.lang.table.delRow,click:this.context.createInvokeHandler("editor.deleteRow")}).render())),this.context.memo("button.deleteCol",(()=>this.button({className:"btn-md",contents:this.ui.icon(this.options.icons.colRemove),tooltip:this.lang.table.delCol,click:this.context.createInvokeHandler("editor.deleteCol")}).render())),this.context.memo("button.deleteTable",(()=>this.button({className:"btn-md",contents:this.ui.icon(this.options.icons.trash),tooltip:this.lang.table.delTable,click:this.context.createInvokeHandler("editor.deleteTable")}).render()))}build(t,o){for(let e=0,n=o.length;e<n;e++){const n=o[e],i=Array.isArray(n)?n[0]:n,s=Array.isArray(n)?1===n.length?[n[0]]:n[1]:[n],r=this.ui.buttonGroup({className:"note-"+i}).render();for(let t=0,o=s.length;t<o;t++){const o=this.context.memo("button."+s[t]);o&&r.append("function"==typeof o?o(this.context):o)}r.appendTo(t)}}updateCurrentStyle(t){const o=t||this.$toolbar,e=this.context.invoke("editor.currentStyle");if(this.updateBtnStates(o,{".note-btn-bold":()=>"bold"===e["font-bold"],".note-btn-italic":()=>"italic"===e["font-italic"],".note-btn-underline":()=>"underline"===e["font-underline"],".note-btn-subscript":()=>"subscript"===e["font-subscript"],".note-btn-superscript":()=>"superscript"===e["font-superscript"],".note-btn-strikethrough":()=>"strikethrough"===e["font-strikethrough"]}),e["font-family"]){const t=e["font-family"].split(",").map((t=>t.replace(/[\'\"]/g,"").replace(/\s+$/,"").replace(/^\s+/,""))),n=lists.find(t,this.isFontInstalled.bind(this));o.find(".dropdown-fontname a").each(((t,o)=>{const e=$(o),i=e.data("value")+""==n+"";e.toggleClass("checked",i)})),o.find(".note-current-fontname").text(n).css("font-family",n)}if(e["font-size"]){const t=e["font-size"];o.find(".dropdown-fontsize a").each(((o,e)=>{const n=$(e),i=n.data("value")+""==t+"";n.toggleClass("checked",i)})),o.find(".note-current-fontsize").text(t);const n=e["font-size-unit"];o.find(".dropdown-fontsizeunit a").each(((t,o)=>{const e=$(o),i=e.data("value")+""==n+"";e.toggleClass("checked",i)})),o.find(".note-current-fontsizeunit").text(n)}if(e["line-height"]){const t=e["line-height"];o.find(".dropdown-line-height a").each(((o,e)=>{const n=$(e),i=$(e).data("value")+""==t+"";n.toggleClass("checked",i)})),o.find(".note-current-line-height").text(t)}}updateBtnStates(t,o){$.each(o,((o,e)=>{this.ui.toggleBtnActive(t.find(o),e())}))}tableMoveHandler(t){const o=$(t.target.parentNode),e=o.next(),n=o.find(".note-dimension-picker-mousecatcher"),i=o.find(".note-dimension-picker-highlighted"),s=o.find(".note-dimension-picker-unhighlighted");let r;if(void 0===t.offsetX){const o=$(t.target).offset();r={x:t.pageX-o.left,y:t.pageY-o.top}}else r={x:t.offsetX,y:t.offsetY};const c=Math.ceil(r.x/18)||1,a=Math.ceil(r.y/18)||1;i.css({width:c+"em",height:a+"em"}),n.data("value",c+"x"+a),c>3&&c<this.options.insertTableMaxSize.col&&s.css({width:c+1+"em"}),a>3&&a<this.options.insertTableMaxSize.row&&s.css({height:a+1+"em"}),e.html(c+" x "+a)}}
//# sourceMappingURL=/sm/89e10dcd2cb71c8f2854654f91742b8cc473085a12d49c0ec00225d8cc2afe5a.map